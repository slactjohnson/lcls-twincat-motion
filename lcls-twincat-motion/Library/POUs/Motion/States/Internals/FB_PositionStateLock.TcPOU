<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_PositionStateLock" Id="{fec9bba1-f69e-45d4-9e61-8f615c0e3bb9}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PositionStateLock
(*
    Implements immutability for a locked DUT_PositionState
    Once this is called the first time, the parameters at the time of the call will be restored on all subsequent calls.
*)
VAR_IN_OUT
    stPositionState: DUT_PositionState;
END_VAR
VAR_INPUT
    bEnable: BOOL;
END_VAR
VAR
    stCachedPositionState: DUT_PositionState;
    bInit: BOOL := FALSE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bEnable THEN
    // Force values to be cached if we've cached something
    IF bInit AND stPositionState.bLocked THEN
        stPositionState.sName := stCachedPositionState.sName;
        stPositionState.fPosition := stCachedPositionState.fPosition;
        stPositionState.fDelta := stCachedPositionState.fDelta;
        stPositionState.fVelocity := stCachedPositionState.fVelocity;
        stPositionState.fAccel := stCachedPositionState.fAccel;
        stPositionState.fDecel := stCachedPositionState.fDecel;
    // If we haven't cached and we should, make the cache. Note that we skip bLocked, bValid, and bMoveOk
    ELSIF NOT bInit AND stPositionState.bLocked THEN
        stCachedPositionState.sName := stPositionState.sName;
        stCachedPositionState.fPosition := stPositionState.fPosition;
        stCachedPositionState.fDelta := stPositionState.fDelta;
        stCachedPositionState.fVelocity := stPositionState.fVelocity;
        stCachedPositionState.fAccel := stPositionState.fAccel;
        stCachedPositionState.fDecel := stPositionState.fDecel;
        bInit := TRUE;
    // Do nothing, or unlock the state if bLocked goes FALSE
    ELSIF NOT stPositionState.bLocked THEN
        bInit := FALSE;
    END_IF
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>